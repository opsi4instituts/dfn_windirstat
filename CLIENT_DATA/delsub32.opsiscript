killtask "windirstat.exe"

Message "Uninstalling " + $ProductName$

; Ergebnis ist StringList (mehrere Einträge möglich);
; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

if ( count ($ResultList$) = "0" )
	comment "No installations of " + $ProductName$ + " found in registry."
	; installations with nsis installer does not create registry entry in $RegPathUninstall$!
	if FileExists ($UninstallProgram$)
		comment "Found " + $UninstallProgram$ + ". Uninstalling with it"
		Winbatch_uninstall
		Sub_check_exitcode
	endif	
else
	Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
	Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))

	if (contains(GetRegistryValue($RegId$, "DisplayName", $RegBitScope$), "OPSI"))
		comment "Found OPSI-Installation-Registry-Entry"
		; dont overwrite $InstallDir$ for installation, therefore we use $UninstallDir$
		Set $UninstallDir$ = GetRegistryValue($RegId$, "InstallLocation", $RegBitScope$)

	    comment "Delete files"
	    Files_uninstall

		comment "Cleanup registry"
		Registry_uninstall /32Bit

		if $DesktopLink$ = "true"
			comment "Create common desktop link"
			Linkfolder_delete_desktoplink	
		endif

		if $StartmenuEntry$ = "yes"
			comment "Create common startmenu entry"
			Linkfolder_uninstall_startmenu	
		endif	
		
		if $ContextMenu$ = "True"
			comment "Create context menu entries"
			Registry_uninstall_context-menu
		endif		

		comment "include custom post deinstall file"
		set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
		if not ($CustomPostDeinstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
			endif
		endif	
	endif
endif

[Winbatch_uninstall]
"$UninstallProgram$" /S

[Files_uninstall]
delete -sf "$UninstallDir$\"

[Registry_uninstall]
deletekey [$RegId$]

[Registry_uninstall_context-menu]
deletekey [HKEY_CLASSES_ROOT\Directory\shell\$ProductId$]
deletekey [HKEY_CLASSES_ROOT\Drive\shell\$ProductId$]

[Linkfolder_delete_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $ProductName$

[Linkfolder_uninstall_startmenu]
set_basefolder common_programs
delete_subfolder $ProductName$

